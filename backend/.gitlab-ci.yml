---
cache:
  paths:
    - ${CI_PROJECT_DIR}/.cache

variables:
  FF_TIMESTAMPS: 1 # для того, чтобы в логах отображалось время события (timestamp)
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "eslint,nodejs-scan-sast"

stages:
  - build
  - test
  - release
  - deploy
  - notify

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
  script:
    - echo "test"
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/sausage-backend:$CI_COMMIT_SHA"
      --build-arg VERSION=$VERSION
      --cache=true

release:
  stage: release
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  cache: []
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $VERSION

# Test job
test:
  stage: test
  image:
    name: golang:alpine3.20
  script:
    - go run ./backend/cmd/api
    - go test -v ./...
# sonarqube-backend-sast:
#   stage: test
#   image: maven:3.8-openjdk-16
#   variables:
#     MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
#     SPRING_CLOUD_VAULT_ENABLED: "false"
#   script:
#     - >
#       mvn -f backend/pom.xml verify sonar:sonar
#       -Dsonar.qualitygate.wait=true
#       -Dsonar.token=$SONAR_TOKEN
#       -Dsonar.host.url=$SONARQUBE_URL
#       -Dsonar.projectName=$SONAR_PROJECT_KEY
#       -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACK
#   allow_failure: true

# include:
#   - template: Security/SAST.gitlab-ci.yml

# spotbugs-sast:
#   stage: test
#   variables:
#     COMPILE: "false"
#     SAST_JAVA_VERSION: 11
#     MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository
